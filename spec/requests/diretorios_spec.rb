require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/diretorios", type: :request do
  
  # This should return the minimal set of attributes required to create a valid
  # Diretorio. As you add validations to Diretorio, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) {
    { "name" => 'Teste',
      "path" => 'Caminho'}
  }

  let(:invalid_attributes) {
    { "name" => 'Teste%',
      "path" => 'Caminho'}
  }

  describe "GET /index" do
    it "renders a successful response" do
      Diretorio.create! valid_attributes
      get diretorios_url
      expect(response).to be_successful
    end
  end

  describe "GET /show" do
    it "renders a successful response" do
      diretorio = Diretorio.create! valid_attributes
      get diretorio_url(diretorio)
      expect(response).to be_successful
    end
  end

  describe "GET /new" do
    it "renders a successful response" do
      get new_diretorio_url
      expect(response).to be_successful
    end
  end

  describe "GET /edit" do
    it "renders a successful response" do
      diretorio = Diretorio.create! valid_attributes
      get edit_diretorio_url(diretorio)
      expect(response).to be_successful
    end
  end

  describe "POST /create" do
    context "with valid parameters" do
      it "creates a new Diretorio" do
        expect {
          post diretorios_url, params: { diretorio: valid_attributes }
        }.to change(Diretorio, :count).by(1)
      end

      it "redirects to the created diretorio" do
        post diretorios_url, params: { diretorio: valid_attributes }
        expect(response).to redirect_to(diretorio_url(DiretoriosMapa.last.parent))
      end
    end

    context "with invalid parameters" do
      it "does not create a new Diretorio" do
        expect {
          post diretorios_url, params: { diretorio: invalid_attributes }
        }.to change(Diretorio, :count).by(0)
      end

      it "renders a successful response (i.e. to display the 'new' template)" do
        post diretorios_url, params: { diretorio: invalid_attributes }
        expect(response).not_to be_successful
      end
    end
  end

  describe "PATCH /update" do
    context "with valid parameters" do
      let(:new_attributes) {
        {"name" => 'Teste',
         "path" => 'Caminho'}
      }

      it "updates the requested diretorio" do
        diretorio = Diretorio.create! valid_attributes
        patch diretorio_url(diretorio), params: { diretorio: new_attributes }
        diretorio.reload
        expect(response).to redirect_to(diretorio_url(diretorio))
      end

      it "redirects to the diretorio" do
        diretorio = Diretorio.create! valid_attributes
        patch diretorio_url(diretorio), params: { diretorio: new_attributes }
        diretorio.reload
        expect(response).to redirect_to(diretorio_url(diretorio))
      end
    end

    context "with invalid parameters" do
      it "renders a successful response (i.e. to display the 'edit' template)" do
        diretorio = Diretorio.create! valid_attributes
        patch diretorio_url(diretorio), params: { diretorio: invalid_attributes }
        expect(response).not_to be_successful
      end
    end
  end

  describe "DELETE /destroy" do
    it "destroys the requested diretorio" do
      diretorio = Diretorio.create! valid_attributes
      expect {
        delete diretorio_url(diretorio)
      }.to change(Diretorio, :count).by(-1)
    end

    it "destroys the requested diretorio using alternative route" do
      diretorio = Diretorio.create! valid_attributes
      expect {
        delete delete_diretorio_diretorio_url(diretorio)
      }.to change(Diretorio, :count).by(-1)
    end

    it "redirects to the diretorios list" do
      diretorio = Diretorio.create! valid_attributes
      delete diretorio_url(diretorio)
      expect(response).to redirect_to(diretorios_url)
    end
  end
end
